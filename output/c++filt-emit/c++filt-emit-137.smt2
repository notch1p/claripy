(declare-fun args_2_8 () (_ BitVec 8))
(declare-fun args_1_8 () (_ BitVec 8))
(declare-fun strlen_563_64 () (_ BitVec 64))
(declare-fun args_3_8 () (_ BitVec 8))
(declare-fun strlen_332_64 () (_ BitVec 64))
(declare-fun strlen_110_64 () (_ BitVec 64))
(assert (let ((a!1 (bvor (concat #b0000000 (ite (= #x2e args_1_8) #b1 #b0))
                 (concat #b0000000 (ite (= #x24 args_1_8) #b1 #b0))))
      (a!10 (bvor (concat #b0000000 (ite (= #x2e args_2_8) #b1 #b0))
                  (concat #b0000000 (ite (= #x24 args_2_8) #b1 #b0)))))
(let ((a!2 (ite (or (= #x01 a!1) (not (= #x00 a!1)))
                (bvadd #x07fffffffffeffe7 (concat #x00000000000000 a!1))
                (bvadd #x07fffffffffeffe8 (concat #x00000000000000 a!1))))
      (a!11 (ite (or (= #x01 a!10) (not (= #x00 a!10))) #x00 args_2_8))
      (a!12 (ite (or (= #x01 a!10) (not (= #x00 a!10))) #x00 args_3_8))
      (a!13 (= #x00 (ite (= #x01 a!10) #xc0 (ite (= #x00 a!10) #xae #x00))))
      (a!14 (= #x00 (ite (= #x01 a!10) #xae (ite (= #x00 a!10) #xc0 #x00))))
      (a!15 (ite (or (= #x01 a!10) (not (= #x00 a!10))) #x00 #xc0)))
(let ((a!3 (ite (and (not (= #x00 a!1)) (not (= #x01 a!1)))
                (bvadd #x07fffffffffeffd8 (concat #x00000000000000 a!1))
                a!2))
      (a!16 (ite a!13
                 (bvadd #x07fffffffffeffe6 (concat #x00000000000000 a!10))
                 (ite (= #x00 a!15)
                      (bvadd #x07fffffffffeffe7 (concat #x00000000000000 a!10))
                      (bvadd #x07fffffffffeffe8 (concat #x00000000000000 a!10))))))
(let ((a!4 (ite (or (= #x01 a!1) (not (= #x00 a!1)) (= #x00 args_3_8))
                (bvadd #x07fffffffffeffd6 (concat #x00000000000000 a!1))
                (ite (= #x01 a!1)
                     a!3
                     (bvadd #x07fffffffffeffd7 (concat #x00000000000000 a!1)))))
      (a!17 (ite a!13
                 (bvadd #x07fffffffffeffe4 (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffe5 (concat #x00000000000000 a!10))
                      a!16))))
(let ((a!5 (ite (or (= #x00 args_3_8) (not (= #x01 a!1)))
                (bvadd #x07fffffffffeffd5 (concat #x00000000000000 a!1))
                a!4))
      (a!18 (ite a!13
                 (bvadd #x07fffffffffeffe2 (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffe3 (concat #x00000000000000 a!10))
                      a!17))))
(let ((a!6 (ite (or (= #x01 a!1) (not (= #x00 a!1)) (= #x00 args_2_8))
                (bvadd #x07fffffffffeffd4 (concat #x00000000000000 a!1))
                a!5))
      (a!19 (ite a!13
                 (bvadd #x07fffffffffeffe0 (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffe1 (concat #x00000000000000 a!10))
                      a!18))))
(let ((a!7 (ite (or (= #x00 args_2_8) (not (= #x01 a!1)))
                (bvadd #x07fffffffffeffd3 (concat #x00000000000000 a!1))
                a!6))
      (a!20 (ite a!13
                 (bvadd #x07fffffffffeffde (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffdf (concat #x00000000000000 a!10))
                      a!19))))
(let ((a!8 (ite (or (= #x01 a!1) (not (= #x00 a!1)) (= #x00 args_1_8))
                (bvadd #x07fffffffffeffd2 (concat #x00000000000000 a!1))
                a!7))
      (a!21 (ite a!13
                 (bvadd #x07fffffffffeffdc (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffdd (concat #x00000000000000 a!10))
                      a!20))))
(let ((a!9 (= (bvadd a!8
                     (bvmul #xffffffffffffffff (concat #x00000000000000 a!1)))
              (bvadd #x07fffffffffeffd2 strlen_110_64)))
      (a!22 (ite a!13
                 (bvadd #x07fffffffffeffda (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffdb (concat #x00000000000000 a!10))
                      a!21))))
(let ((a!23 (ite a!13
                 (bvadd #x07fffffffffeffd8 (concat #x00000000000000 a!10))
                 (ite a!14
                      (bvadd #x07fffffffffeffd9 (concat #x00000000000000 a!10))
                      a!22))))
(let ((a!24 (ite (= #x00 (ite (= #x01 a!10) #xae #x00))
                 (bvadd #x07fffffffffeffd7 (concat #x00000000000000 a!10))
                 a!23)))
(let ((a!25 (ite (= #x00 (ite (= #x01 a!10) args_3_8 #x00))
                 (bvadd #x07fffffffffeffd5 (concat #x00000000000000 a!10))
                 (ite (= #x00 a!12)
                      (bvadd #x07fffffffffeffd6 (concat #x00000000000000 a!10))
                      a!24))))
(let ((a!26 (bvadd (ite (= #x00 a!11)
                        (bvadd #x07fffffffffeffd4
                               (concat #x00000000000000 a!10))
                        a!25)
                   (bvmul #xffffffffffffffff (concat #x00000000000000 a!10)))))
  (and (not (= #x40 args_1_8))
       (not (= #x2d args_1_8))
       (not (= #x2d args_3_8))
       (not (= #x40 args_3_8))
       (not (= #x2d args_2_8))
       (not (= #x40 args_2_8))
       a!9
       (= (ite (= #x00 args_1_8) #x07fffffffffeffd2 #x07fffffffffeffd3)
          (bvadd #x07fffffffffeffd2 strlen_332_64))
       (= #b000000000000000000000000000000000000000000000000000000000000000
          ((_ extract 63 1) strlen_332_64))
       (= a!26 (bvadd #x07fffffffffeffd4 strlen_563_64))
       (or (not (= #x00 a!1)) (= #x01 a!1) (not (= #x5f args_1_8)))
       (or (not (= #x5f args_2_8)) (= #x01 a!10) (not (= #x00 a!10))))))))))))))))))
(define-fun goal () (_ BitVec 64) (let ((a!1 (bvor (concat #b0000000 (ite (= #x2e args_2_8) #b1 #b0))
                 (concat #b0000000 (ite (= #x24 args_2_8) #b1 #b0)))))
  (bvadd #x07fffffffffeffd4 (concat #x00000000000000 a!1)))) 
(minimize goal)
(check-sat)